#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2023 Nitesh Shetty
#
# Run single of copy offload IO using block layer emulation,
# for file backed ns

. tests/nvme/rc

DESCRIPTION="run single copy offload (block layer emulation) IO on NVMeOF file-backed ns"
TIMED=1

requires() {
	_nvme_requires
	_have_fio
	_require_nvme_trtype_is_fabrics
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local nvmedev
	_nvmet_target_setup --blkdev file

	_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}"
	nvmedev=$(_find_nvme_dev "${def_subsysnqn}")
	_check_uuid "${nvmedev}"

	if [ -e "/sys/block/${nvmedev}n1/queue/copy_max_hw_bytes" ]; then
		echo 0 > /sys/block/"${nvmedev}n1"/queue/copy_max_bytes
		_fio_copy_verify_single_io "/dev/${nvmedev}n1" 4096 "nvme/nvme_setup_cmd"
		_fio_copy_verify_single_io "/dev/${nvmedev}n1" 1048576
	else
		SKIP_REASONS+=("Kernel does not support copy offload")
	fi

	_nvme_disconnect_subsys "${def_subsysnqn}"
	_nvmet_target_cleanup

	echo "Test complete"
}
