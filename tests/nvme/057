#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2023 Nitesh Shetty
#
# Run a single copy offload IO using device copy offload,
# for block device backed ns

. tests/nvme/rc

DESCRIPTION="run single copy offload (device offload) IO on NVMeOF block device-backed ns"

requires() {
	_nvme_requires
	_have_fio && _have_loop
	_require_nvme_trtype_is_fabrics
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local nvmedev

	_nvmet_target_setup

	_nvme_connect_subsys "${nvme_trtype}" "${def_subsysnqn}"

	nvmedev=$(_find_nvme_dev "${def_subsysnqn}")
	_check_uuid "${nvmedev}"

	if [ -e "/sys/block/${nvmedev}n1/queue/copy_max_hw_bytes" ]; then
		if [[ $(cat "/sys/block/${nvmedev}n1/queue/copy_max_hw_bytes") -gt 0 ]]; then
			_fio_copy_verify_single_io "/dev/${nvmedev}n1" 4096 "nvme/nvme_setup_cmd"
			_fio_copy_verify_single_io "/dev/${nvmedev}n1" 1048576
		else
			SKIP_REASONS+=("Device does not support copy offload")
		fi
	else
		SKIP_REASONS+=("Kernel does not support copy offload")
	fi

	_nvme_disconnect_subsys "${def_subsysnqn}"

	_nvmet_target_cleanup

	echo "Test complete"
}
